% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FLOWobj.R
\name{FLOWobj}
\alias{FLOWobj}
\title{Create a FLOWobj object}
\usage{
FLOWobj(GRIDobj, type = "single", preprocess = "fill", ...)
}
\arguments{
\item{GRIDobj}{\code{GRIDobj} object used for the operation}

\item{type}{\code{Character} keyword defining the method used to 
calculate the flow direction information. One out of \code{"single"},
\code{"multi"} and \code{"dinf"}. Default is \code{"single"}}

\item{preprocess}{\code{Character} value, option to preprocess the 
\code{GRIDobj}. One out of \code{"fill"} and \code{"none"}. 
Default is \code{"fill"}. See details for supported additional parameters.}

\item{\dots}{Further arguments passed to the internally used DEM 
preprocessing functions \code{fillsinks()}. See details for supported 
arguments.}
}
\value{
Returns a \code{FLOWobj} object
}
\description{
FLOWobj creates a flow direction object which can be used to
calculate terrain attributes such as flow accumulation, drainage
basin delineation, flow path extraction, etc. A \code{FLOWobj} is derived
from a digital elevation model (DEM) which is stored as a \code{GRIDobj}.
}
\details{
\code{FLOWobj(DEM, "single")} calculates single flow directions. This means
that each pixel has only one downstream neighbor. Despite these
limitations, \code{"single"} will be mostly the algorithm of choice because
single flow directions are the basis for stream network and their
analysis.

\code{FLOWobj(DEM, "multi")} derives multiple flow direction (MFD) and
\code{FLOWobj(DEM, "dinf")} derives D infinity according to the method 
by Tarboton (1997). Both algorithms cannot be used to calculate
stream networks or drainage basins, for example.

To convert a transfer matrix \code{M} to a \code{FLOWobj}, use the 
function \code{M2FLOWobj()}.

Supported arguments for DEM preprocessing are the following: 

sinks, a logical matrix of the same size as the \code{GRIDobj}. 
\code{TRUE} values in sinks are treated as sinks in the digital elevation  
model and are not filled or carved, if the preprocessing option fill or  
carve are chosen.

internaldrainage, a logical value, default is \code{FALSE}, set this 
parameter value to \code{TRUE} if flow directions should be derived in the 
lowest, flat regions of internal drainage basins. By default, this parameter 
is set to \code{FALSE} since this information is usually not required and 
flow paths will stop when entering flat, internally drained sections.

cheight, a numerical value, adjust cost matrix if preprocessing option 
\code{carve} has been chosen.

verbose, a logical value, verbose output in the command window to 
track computational progress. Particularly interesting when working with 
very large matrices.
}
\examples{

## LATER
x = 1

}
\references{
Freeman, T. G.: Calculating catchment area with divergent flow based on 
a regular grid, Computers & Geosciences, 17, 413–422, 
https://doi.org/10.1016/0098-3004(91)90048-I, 1991.

Tarboton, D. G. (1997). A new method for the determination of flow 
directions and upslope areas in grid digital elevation models. 
Water Resources Research, 33(2), 309-319.

Eddins, S. (2016). Upslope area function. Mathworks File Exchange, 
https://www.mathworks.com/matlabcentral/fileexchange/15818-upslope-area-functions

Schwanghart, W., Groom, G., Kuhn, N. J., and Heckrath, G.: Flow network
derivation from a high resolution DEM in a low relief, agrarian landscape, 
Earth Surface Processes and Landforms, 38, 1576–1586, 
https://doi.org/10.1002/esp.3452, 2013.
}
\author{
Michael Dietze, Wolfgang Schwanghart
}
