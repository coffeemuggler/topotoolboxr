% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate.R
\name{aggregate}
\alias{aggregate}
\title{Aggregate a GRIDobj or point data set to the resolution of a GRIDobj}
\usage{
aggregate(A, B, xy, xyz, aggfun = "mean")
}
\arguments{
\item{A}{\code{SpatRaster} that will be aggregated}

\item{B}{\code{SpatRaster} of coarser resolution to be aggregated to}

\item{xy}{\code{data.frame} or \code{matrix} with x and y coordinates 
of irregular spaced geodata points. The output will be converted to a 
spatial grid of the same resolution and CRS as B. Grid values will be 
assigned \code{TRUE}.}

\item{xyz}{\code{data.frame} or \code{matrix} with x, y and z coordinates 
of irregular spaced geodata points. The output will be converted to a 
spatial grid of the same resolution and CRS as B.}

\item{aggfun}{\code{Character} value, name of the function that is used 
to calculate the new aggregated values. Keywords may be  
\code{"mean"}, \code{"median"}, \code{"sd"}, \code{"min"}, \code{"max"}. 
Default is \code{"mean"}.}
}
\value{
Returns an aggregated \code{GRIDobj}
}
\description{
This function resamples the grid A to match the extent and resolution of 
grid B. B must spatially overlap with A. By default, the function uses the 
mean to calculate new grid values, but any other function that takes 
returns a scalar (e.g. median, std, ...) can be used, too.
}
\details{
Values to be aggregated can also be supplied as list of coordinates
(and attributes). This is particularly useful if point density for
each pixel is greater than one.
}
\examples{

## load example data set
data(srtm_bigtujunga30m_utm11)
DEM <- terra::unwrap(srtm_bigtujunga30m_utm11)

## create GRIDobj with 100 m resolution and the same extent as DEM
B <- terra::rast(res = c(1000, 1000), ext = terra::ext(DEM))

## aggregate and plot DEM based on coarse GRIDobj B
C <- aggregate(A = DEM, B = B)
plot_GRIDobj(C)

## create 100 random points and aggregate to geometry of GRIDobj B
pts <- data.frame(x = runif(100, terra::ext(DEM)[1], terra::ext(DEM)[2]),
                  y = runif(100, terra::ext(DEM)[3], terra::ext(DEM)[4]),
                  z = rnorm(100))
D <- aggregate(B = B, xyz = pts)
plot_GRIDobj(D)

}
